components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 61af4cfe6ab0c7226415c9c0
        email: erenkyi0@gmail.com
        name: John Doe
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MWFmNGNmZTZhYjBjNzIyNjQxNWM5YzAiLCJpYXQiOjE2Mzg4Nzg0NjIsImV4cCI6MTY0MTQ3MDQ2MiwidHlwZSI6InJlZnJlc2gifQ.a5gI7vSqpeYBHFq-rJ7jMvln57Zz7zAxXxaNp93geMA
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    Survey:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        questions:
          type: array
          items:
            type: object
      example:
        id: 61af4cfe6ab0c7226415c9c0
        name: Test Survey Title
        category: 61af4cfe6ab0c7226415c9c0
        questions: [{}]

    QuestionObject:
      type: object
      properties:
        question_id:
          type: number
        question_text:
          type: string
        answers:
          type: array
          items:
            type: object
            properties:
              answer_id:
                type: number
              answer_text:
                type: string
      example:
        question_id: 1
        question_string: Question 1
        answers:
          answer_id: 1
          answer_text: Answer 1

    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        color:
          type: string
        rank:
          type: number
      example:
        id: 61af4cfe6ab0c7226415c9c0
        name: Test Category
        color: "#FFFFFF"
        rank: 1

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    DuplicateCategoryRank:
      description: Rank already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Rank already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT